<?php
/**
 * @file
 * Code for the Compro Paragraphs feature.
 */

/**
 * Helper function to get options (all or available).
 */
function _compro_paragraphs_get_options() {
  return array(
    'h1' => t('Heading 1'),
    'h2' => t('Heading 2'),
    'h3' => t('Heading 3'),
    'h4' => t('Heading 4'),
    'h5' => t('Heading 5'),
    'h6' => t('Heading 6'),
  );
}

/**
 * Implements hook_page_attachments().
 */
function compro_paragraphs_page_attachments(array &$attachments) {
  // Attach our css file.
  $attachments['#attached']['library'][] = 'compro_paragraphs/css';
}

/**
 * Implements hook_preprocess_hook().
 */
function compro_paragraphs_preprocess_paragraph(&$variables) {
  // Make blockquote paragraphs into blockquotes.
  $variables['tag'] = 'div';
  if ($variables['paragraph']->getType() === 'blockquote') {
    $variables['tag'] = 'blockquote';
  }
}

/**
 * Implements template_preprocess_file().
 */
function compro_paragraphs_preprocess_file(&$variables) {
  // Use the media dropdowns to make the element float/clear.
  if ($parent = $variables['elements']['#file']->_referringItem) {
    if ($paragraph_parent = $parent->getParent()->getParent()) {
      if ($parent->getFieldDefinition()->getName() === 'field_media_media') {
        // Add float class if float field populated.
        if ($paragraph_parent->get('field_media_float')->getValue()[0]['value']) {
          $variables['attributes']['class'][] = 'float-'
            . $paragraph_parent->get('field_media_float')->getValue()[0]['value'];
        }

        // Add clear class if clear field populated.
        if ($paragraph_parent->get('field_media_clear')->getValue()[0]['value']) {
          $variables['attributes']['class'][] = 'clear-'
            . $paragraph_parent->get('field_media_clear')->getValue()[0]['value'];
        }
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function compro_paragraphs_theme() {
  // Define the template file for our paragraph field.
  $theme['field__field_paragraph'] = [
    'template' => 'field--field-paragraph',
  ];

  return $theme;
}

/**
 * Implements hook_theme_registry_alter().
 */
function compro_paragraphs_theme_registry_alter(&$theme_registry) {
  // Defined path to current module.
  $module_path = drupal_get_path('module', 'compro_paragraphs');
  // Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.html.twig', $module_path);
  // Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path . '/templates';
      $theme_registry[$key]['type'] = 'module';
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
    }
  }
}
